//     Merge_sorted_lists_recursive_approach
//**********************************************************
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* head1, ListNode* head2) {
    // through recursion
    ListNode* result;
        if(head1==nullptr){
            return head2;
        }
        else if(head2==nullptr){
            return head1;
        }
        if(head1->val < head2->val){
            result=head1;
            result->next=mergeTwoLists(head1->next,head2);
        }
        else{
            result=head2;
            result->next=mergeTwoLists(head1,head2->next);
        }
        return result;
    }
};
//**************************************************************************
